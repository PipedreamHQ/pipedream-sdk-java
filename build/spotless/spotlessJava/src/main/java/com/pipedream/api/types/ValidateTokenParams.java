/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.pipedream.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.pipedream.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ValidateTokenParams.Builder.class)
public final class ValidateTokenParams {
    private final String appId;

    private final Optional<String> oauthAppId;

    private final Map<String, Object> additionalProperties;

    private ValidateTokenParams(String appId, Optional<String> oauthAppId, Map<String, Object> additionalProperties) {
        this.appId = appId;
        this.oauthAppId = oauthAppId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The app ID to validate against
     */
    @JsonProperty("app_id")
    public String getAppId() {
        return appId;
    }

    /**
     * @return The OAuth app ID
     */
    @JsonProperty("oauth_app_id")
    public Optional<String> getOauthAppId() {
        return oauthAppId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ValidateTokenParams && equalTo((ValidateTokenParams) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ValidateTokenParams other) {
        return appId.equals(other.appId) && oauthAppId.equals(other.oauthAppId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.appId, this.oauthAppId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AppIdStage builder() {
        return new Builder();
    }

    public interface AppIdStage {
        /**
         * <p>The app ID to validate against</p>
         */
        _FinalStage appId(@NotNull String appId);

        Builder from(ValidateTokenParams other);
    }

    public interface _FinalStage {
        ValidateTokenParams build();

        /**
         * <p>The OAuth app ID</p>
         */
        _FinalStage oauthAppId(Optional<String> oauthAppId);

        _FinalStage oauthAppId(String oauthAppId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AppIdStage, _FinalStage {
        private String appId;

        private Optional<String> oauthAppId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ValidateTokenParams other) {
            appId(other.getAppId());
            oauthAppId(other.getOauthAppId());
            return this;
        }

        /**
         * <p>The app ID to validate against</p>
         * <p>The app ID to validate against</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("app_id")
        public _FinalStage appId(@NotNull String appId) {
            this.appId = Objects.requireNonNull(appId, "appId must not be null");
            return this;
        }

        /**
         * <p>The OAuth app ID</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage oauthAppId(String oauthAppId) {
            this.oauthAppId = Optional.ofNullable(oauthAppId);
            return this;
        }

        /**
         * <p>The OAuth app ID</p>
         */
        @java.lang.Override
        @JsonSetter(value = "oauth_app_id", nulls = Nulls.SKIP)
        public _FinalStage oauthAppId(Optional<String> oauthAppId) {
            this.oauthAppId = oauthAppId;
            return this;
        }

        @java.lang.Override
        public ValidateTokenParams build() {
            return new ValidateTokenParams(appId, oauthAppId, additionalProperties);
        }
    }
}
