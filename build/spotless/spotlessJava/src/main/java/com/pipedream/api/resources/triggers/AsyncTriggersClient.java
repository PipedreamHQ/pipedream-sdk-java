/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.pipedream.api.resources.triggers;

import com.pipedream.api.core.ClientOptions;
import com.pipedream.api.core.RequestOptions;
import com.pipedream.api.core.pagination.SyncPagingIterable;
import com.pipedream.api.resources.triggers.requests.DeployTriggerOpts;
import com.pipedream.api.resources.triggers.requests.TriggersConfigurePropRequest;
import com.pipedream.api.resources.triggers.requests.TriggersListRequest;
import com.pipedream.api.resources.triggers.requests.TriggersReloadPropsRequest;
import com.pipedream.api.types.Component;
import com.pipedream.api.types.ConfigurePropResponse;
import com.pipedream.api.types.DeployedComponent;
import com.pipedream.api.types.ReloadPropsResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncTriggersClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTriggersClient rawClient;

    public AsyncTriggersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTriggersClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTriggersClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<SyncPagingIterable<Component>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<SyncPagingIterable<Component>> list(TriggersListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<SyncPagingIterable<Component>> list(
            TriggersListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Component> retrieve(String componentId) {
        return this.rawClient.retrieve(componentId).thenApply(response -> response.body());
    }

    public CompletableFuture<Component> retrieve(String componentId, RequestOptions requestOptions) {
        return this.rawClient.retrieve(componentId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ConfigurePropResponse> configureProp(TriggersConfigurePropRequest request) {
        return this.rawClient.configureProp(request).thenApply(response -> response.body());
    }

    public CompletableFuture<ConfigurePropResponse> configureProp(
            TriggersConfigurePropRequest request, RequestOptions requestOptions) {
        return this.rawClient.configureProp(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ReloadPropsResponse> reloadProps(TriggersReloadPropsRequest request) {
        return this.rawClient.reloadProps(request).thenApply(response -> response.body());
    }

    public CompletableFuture<ReloadPropsResponse> reloadProps(
            TriggersReloadPropsRequest request, RequestOptions requestOptions) {
        return this.rawClient.reloadProps(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<DeployedComponent> deploy(DeployTriggerOpts request) {
        return this.rawClient.deploy(request).thenApply(response -> response.body());
    }

    public CompletableFuture<DeployedComponent> deploy(DeployTriggerOpts request, RequestOptions requestOptions) {
        return this.rawClient.deploy(request, requestOptions).thenApply(response -> response.body());
    }
}
