/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.pipedream.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.pipedream.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = App.Builder.class)
public final class App {
    private final Optional<String> id;

    private final String nameSlug;

    private final String name;

    private final Optional<AppAuthType> authType;

    private final Optional<String> description;

    private final String imgSrc;

    private final Optional<String> customFieldsJson;

    private final List<String> categories;

    private final double featuredWeight;

    private final Map<String, Object> additionalProperties;

    private App(
            Optional<String> id,
            String nameSlug,
            String name,
            Optional<AppAuthType> authType,
            Optional<String> description,
            String imgSrc,
            Optional<String> customFieldsJson,
            List<String> categories,
            double featuredWeight,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.nameSlug = nameSlug;
        this.name = name;
        this.authType = authType;
        this.description = description;
        this.imgSrc = imgSrc;
        this.customFieldsJson = customFieldsJson;
        this.categories = categories;
        this.featuredWeight = featuredWeight;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return ID of the app. Only applies for OAuth apps.
     */
    @JsonProperty("id")
    public Optional<String> getId() {
        return id;
    }

    /**
     * @return The name slug of the target app (see https://pipedream.com/docs/connect/quickstart#find-your-apps-name-slug)
     */
    @JsonProperty("name_slug")
    public String getNameSlug() {
        return nameSlug;
    }

    /**
     * @return The human-readable name of the app
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return The authentication type used by the app
     */
    @JsonProperty("auth_type")
    public Optional<AppAuthType> getAuthType() {
        return authType;
    }

    /**
     * @return A short description of the app
     */
    @JsonProperty("description")
    public Optional<String> getDescription() {
        return description;
    }

    /**
     * @return The URL to the app's logo
     */
    @JsonProperty("img_src")
    public String getImgSrc() {
        return imgSrc;
    }

    /**
     * @return A JSON string representing the custom fields for the app
     */
    @JsonProperty("custom_fields_json")
    public Optional<String> getCustomFieldsJson() {
        return customFieldsJson;
    }

    /**
     * @return Categories associated with the app
     */
    @JsonProperty("categories")
    public List<String> getCategories() {
        return categories;
    }

    /**
     * @return A rough directional ordering of app popularity, subject to changes by Pipedream
     */
    @JsonProperty("featured_weight")
    public double getFeaturedWeight() {
        return featuredWeight;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof App && equalTo((App) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(App other) {
        return id.equals(other.id)
                && nameSlug.equals(other.nameSlug)
                && name.equals(other.name)
                && authType.equals(other.authType)
                && description.equals(other.description)
                && imgSrc.equals(other.imgSrc)
                && customFieldsJson.equals(other.customFieldsJson)
                && categories.equals(other.categories)
                && featuredWeight == other.featuredWeight;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.nameSlug,
                this.name,
                this.authType,
                this.description,
                this.imgSrc,
                this.customFieldsJson,
                this.categories,
                this.featuredWeight);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameSlugStage builder() {
        return new Builder();
    }

    public interface NameSlugStage {
        /**
         * <p>The name slug of the target app (see https://pipedream.com/docs/connect/quickstart#find-your-apps-name-slug)</p>
         */
        NameStage nameSlug(@NotNull String nameSlug);

        Builder from(App other);
    }

    public interface NameStage {
        /**
         * <p>The human-readable name of the app</p>
         */
        ImgSrcStage name(@NotNull String name);
    }

    public interface ImgSrcStage {
        /**
         * <p>The URL to the app's logo</p>
         */
        FeaturedWeightStage imgSrc(@NotNull String imgSrc);
    }

    public interface FeaturedWeightStage {
        /**
         * <p>A rough directional ordering of app popularity, subject to changes by Pipedream</p>
         */
        _FinalStage featuredWeight(double featuredWeight);
    }

    public interface _FinalStage {
        App build();

        /**
         * <p>ID of the app. Only applies for OAuth apps.</p>
         */
        _FinalStage id(Optional<String> id);

        _FinalStage id(String id);

        /**
         * <p>The authentication type used by the app</p>
         */
        _FinalStage authType(Optional<AppAuthType> authType);

        _FinalStage authType(AppAuthType authType);

        /**
         * <p>A short description of the app</p>
         */
        _FinalStage description(Optional<String> description);

        _FinalStage description(String description);

        /**
         * <p>A JSON string representing the custom fields for the app</p>
         */
        _FinalStage customFieldsJson(Optional<String> customFieldsJson);

        _FinalStage customFieldsJson(String customFieldsJson);

        /**
         * <p>Categories associated with the app</p>
         */
        _FinalStage categories(List<String> categories);

        _FinalStage addCategories(String categories);

        _FinalStage addAllCategories(List<String> categories);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements NameSlugStage, NameStage, ImgSrcStage, FeaturedWeightStage, _FinalStage {
        private String nameSlug;

        private String name;

        private String imgSrc;

        private double featuredWeight;

        private List<String> categories = new ArrayList<>();

        private Optional<String> customFieldsJson = Optional.empty();

        private Optional<String> description = Optional.empty();

        private Optional<AppAuthType> authType = Optional.empty();

        private Optional<String> id = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(App other) {
            id(other.getId());
            nameSlug(other.getNameSlug());
            name(other.getName());
            authType(other.getAuthType());
            description(other.getDescription());
            imgSrc(other.getImgSrc());
            customFieldsJson(other.getCustomFieldsJson());
            categories(other.getCategories());
            featuredWeight(other.getFeaturedWeight());
            return this;
        }

        /**
         * <p>The name slug of the target app (see https://pipedream.com/docs/connect/quickstart#find-your-apps-name-slug)</p>
         * <p>The name slug of the target app (see https://pipedream.com/docs/connect/quickstart#find-your-apps-name-slug)</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name_slug")
        public NameStage nameSlug(@NotNull String nameSlug) {
            this.nameSlug = Objects.requireNonNull(nameSlug, "nameSlug must not be null");
            return this;
        }

        /**
         * <p>The human-readable name of the app</p>
         * <p>The human-readable name of the app</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public ImgSrcStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        /**
         * <p>The URL to the app's logo</p>
         * <p>The URL to the app's logo</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("img_src")
        public FeaturedWeightStage imgSrc(@NotNull String imgSrc) {
            this.imgSrc = Objects.requireNonNull(imgSrc, "imgSrc must not be null");
            return this;
        }

        /**
         * <p>A rough directional ordering of app popularity, subject to changes by Pipedream</p>
         * <p>A rough directional ordering of app popularity, subject to changes by Pipedream</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("featured_weight")
        public _FinalStage featuredWeight(double featuredWeight) {
            this.featuredWeight = featuredWeight;
            return this;
        }

        /**
         * <p>Categories associated with the app</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllCategories(List<String> categories) {
            this.categories.addAll(categories);
            return this;
        }

        /**
         * <p>Categories associated with the app</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addCategories(String categories) {
            this.categories.add(categories);
            return this;
        }

        /**
         * <p>Categories associated with the app</p>
         */
        @java.lang.Override
        @JsonSetter(value = "categories", nulls = Nulls.SKIP)
        public _FinalStage categories(List<String> categories) {
            this.categories.clear();
            this.categories.addAll(categories);
            return this;
        }

        /**
         * <p>A JSON string representing the custom fields for the app</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage customFieldsJson(String customFieldsJson) {
            this.customFieldsJson = Optional.ofNullable(customFieldsJson);
            return this;
        }

        /**
         * <p>A JSON string representing the custom fields for the app</p>
         */
        @java.lang.Override
        @JsonSetter(value = "custom_fields_json", nulls = Nulls.SKIP)
        public _FinalStage customFieldsJson(Optional<String> customFieldsJson) {
            this.customFieldsJson = customFieldsJson;
            return this;
        }

        /**
         * <p>A short description of the app</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage description(String description) {
            this.description = Optional.ofNullable(description);
            return this;
        }

        /**
         * <p>A short description of the app</p>
         */
        @java.lang.Override
        @JsonSetter(value = "description", nulls = Nulls.SKIP)
        public _FinalStage description(Optional<String> description) {
            this.description = description;
            return this;
        }

        /**
         * <p>The authentication type used by the app</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage authType(AppAuthType authType) {
            this.authType = Optional.ofNullable(authType);
            return this;
        }

        /**
         * <p>The authentication type used by the app</p>
         */
        @java.lang.Override
        @JsonSetter(value = "auth_type", nulls = Nulls.SKIP)
        public _FinalStage authType(Optional<AppAuthType> authType) {
            this.authType = authType;
            return this;
        }

        /**
         * <p>ID of the app. Only applies for OAuth apps.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage id(String id) {
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * <p>ID of the app. Only applies for OAuth apps.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "id", nulls = Nulls.SKIP)
        public _FinalStage id(Optional<String> id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        public App build() {
            return new App(
                    id,
                    nameSlug,
                    name,
                    authType,
                    description,
                    imgSrc,
                    customFieldsJson,
                    categories,
                    featuredWeight,
                    additionalProperties);
        }
    }
}
