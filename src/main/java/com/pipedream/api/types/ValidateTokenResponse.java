/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.pipedream.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.pipedream.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ValidateTokenResponse.Builder.class)
public final class ValidateTokenResponse {
    private final Optional<App> app;

    private final Optional<String> error;

    private final Optional<String> errorRedirectUri;

    private final Optional<String> oauthAppId;

    private final Optional<String> projectAppName;

    private final Optional<String> projectEnvironment;

    private final Optional<String> projectId;

    private final Optional<String> projectSupportEmail;

    private final boolean success;

    private final Optional<String> successRedirectUri;

    private final Map<String, Object> additionalProperties;

    private ValidateTokenResponse(
            Optional<App> app,
            Optional<String> error,
            Optional<String> errorRedirectUri,
            Optional<String> oauthAppId,
            Optional<String> projectAppName,
            Optional<String> projectEnvironment,
            Optional<String> projectId,
            Optional<String> projectSupportEmail,
            boolean success,
            Optional<String> successRedirectUri,
            Map<String, Object> additionalProperties) {
        this.app = app;
        this.error = error;
        this.errorRedirectUri = errorRedirectUri;
        this.oauthAppId = oauthAppId;
        this.projectAppName = projectAppName;
        this.projectEnvironment = projectEnvironment;
        this.projectId = projectId;
        this.projectSupportEmail = projectSupportEmail;
        this.success = success;
        this.successRedirectUri = successRedirectUri;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("app")
    public Optional<App> getApp() {
        return app;
    }

    /**
     * @return Error message if validation failed
     */
    @JsonProperty("error")
    public Optional<String> getError() {
        return error;
    }

    /**
     * @return URI to redirect to on error
     */
    @JsonProperty("error_redirect_uri")
    public Optional<String> getErrorRedirectUri() {
        return errorRedirectUri;
    }

    /**
     * @return OAuth app ID if applicable
     */
    @JsonProperty("oauth_app_id")
    public Optional<String> getOauthAppId() {
        return oauthAppId;
    }

    /**
     * @return Name of the project app
     */
    @JsonProperty("project_app_name")
    public Optional<String> getProjectAppName() {
        return projectAppName;
    }

    /**
     * @return Environment of the project
     */
    @JsonProperty("project_environment")
    public Optional<String> getProjectEnvironment() {
        return projectEnvironment;
    }

    /**
     * @return ID of the project
     */
    @JsonProperty("project_id")
    public Optional<String> getProjectId() {
        return projectId;
    }

    /**
     * @return Support email for the project
     */
    @JsonProperty("project_support_email")
    public Optional<String> getProjectSupportEmail() {
        return projectSupportEmail;
    }

    /**
     * @return Whether the token validation was successful
     */
    @JsonProperty("success")
    public boolean getSuccess() {
        return success;
    }

    /**
     * @return URI to redirect to on success
     */
    @JsonProperty("success_redirect_uri")
    public Optional<String> getSuccessRedirectUri() {
        return successRedirectUri;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ValidateTokenResponse && equalTo((ValidateTokenResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ValidateTokenResponse other) {
        return app.equals(other.app)
                && error.equals(other.error)
                && errorRedirectUri.equals(other.errorRedirectUri)
                && oauthAppId.equals(other.oauthAppId)
                && projectAppName.equals(other.projectAppName)
                && projectEnvironment.equals(other.projectEnvironment)
                && projectId.equals(other.projectId)
                && projectSupportEmail.equals(other.projectSupportEmail)
                && success == other.success
                && successRedirectUri.equals(other.successRedirectUri);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.app,
                this.error,
                this.errorRedirectUri,
                this.oauthAppId,
                this.projectAppName,
                this.projectEnvironment,
                this.projectId,
                this.projectSupportEmail,
                this.success,
                this.successRedirectUri);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SuccessStage builder() {
        return new Builder();
    }

    public interface SuccessStage {
        /**
         * <p>Whether the token validation was successful</p>
         */
        _FinalStage success(boolean success);

        Builder from(ValidateTokenResponse other);
    }

    public interface _FinalStage {
        ValidateTokenResponse build();

        _FinalStage app(Optional<App> app);

        _FinalStage app(App app);

        /**
         * <p>Error message if validation failed</p>
         */
        _FinalStage error(Optional<String> error);

        _FinalStage error(String error);

        /**
         * <p>URI to redirect to on error</p>
         */
        _FinalStage errorRedirectUri(Optional<String> errorRedirectUri);

        _FinalStage errorRedirectUri(String errorRedirectUri);

        /**
         * <p>OAuth app ID if applicable</p>
         */
        _FinalStage oauthAppId(Optional<String> oauthAppId);

        _FinalStage oauthAppId(String oauthAppId);

        /**
         * <p>Name of the project app</p>
         */
        _FinalStage projectAppName(Optional<String> projectAppName);

        _FinalStage projectAppName(String projectAppName);

        /**
         * <p>Environment of the project</p>
         */
        _FinalStage projectEnvironment(Optional<String> projectEnvironment);

        _FinalStage projectEnvironment(String projectEnvironment);

        /**
         * <p>ID of the project</p>
         */
        _FinalStage projectId(Optional<String> projectId);

        _FinalStage projectId(String projectId);

        /**
         * <p>Support email for the project</p>
         */
        _FinalStage projectSupportEmail(Optional<String> projectSupportEmail);

        _FinalStage projectSupportEmail(String projectSupportEmail);

        /**
         * <p>URI to redirect to on success</p>
         */
        _FinalStage successRedirectUri(Optional<String> successRedirectUri);

        _FinalStage successRedirectUri(String successRedirectUri);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SuccessStage, _FinalStage {
        private boolean success;

        private Optional<String> successRedirectUri = Optional.empty();

        private Optional<String> projectSupportEmail = Optional.empty();

        private Optional<String> projectId = Optional.empty();

        private Optional<String> projectEnvironment = Optional.empty();

        private Optional<String> projectAppName = Optional.empty();

        private Optional<String> oauthAppId = Optional.empty();

        private Optional<String> errorRedirectUri = Optional.empty();

        private Optional<String> error = Optional.empty();

        private Optional<App> app = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ValidateTokenResponse other) {
            app(other.getApp());
            error(other.getError());
            errorRedirectUri(other.getErrorRedirectUri());
            oauthAppId(other.getOauthAppId());
            projectAppName(other.getProjectAppName());
            projectEnvironment(other.getProjectEnvironment());
            projectId(other.getProjectId());
            projectSupportEmail(other.getProjectSupportEmail());
            success(other.getSuccess());
            successRedirectUri(other.getSuccessRedirectUri());
            return this;
        }

        /**
         * <p>Whether the token validation was successful</p>
         * <p>Whether the token validation was successful</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("success")
        public _FinalStage success(boolean success) {
            this.success = success;
            return this;
        }

        /**
         * <p>URI to redirect to on success</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage successRedirectUri(String successRedirectUri) {
            this.successRedirectUri = Optional.ofNullable(successRedirectUri);
            return this;
        }

        /**
         * <p>URI to redirect to on success</p>
         */
        @java.lang.Override
        @JsonSetter(value = "success_redirect_uri", nulls = Nulls.SKIP)
        public _FinalStage successRedirectUri(Optional<String> successRedirectUri) {
            this.successRedirectUri = successRedirectUri;
            return this;
        }

        /**
         * <p>Support email for the project</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage projectSupportEmail(String projectSupportEmail) {
            this.projectSupportEmail = Optional.ofNullable(projectSupportEmail);
            return this;
        }

        /**
         * <p>Support email for the project</p>
         */
        @java.lang.Override
        @JsonSetter(value = "project_support_email", nulls = Nulls.SKIP)
        public _FinalStage projectSupportEmail(Optional<String> projectSupportEmail) {
            this.projectSupportEmail = projectSupportEmail;
            return this;
        }

        /**
         * <p>ID of the project</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage projectId(String projectId) {
            this.projectId = Optional.ofNullable(projectId);
            return this;
        }

        /**
         * <p>ID of the project</p>
         */
        @java.lang.Override
        @JsonSetter(value = "project_id", nulls = Nulls.SKIP)
        public _FinalStage projectId(Optional<String> projectId) {
            this.projectId = projectId;
            return this;
        }

        /**
         * <p>Environment of the project</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage projectEnvironment(String projectEnvironment) {
            this.projectEnvironment = Optional.ofNullable(projectEnvironment);
            return this;
        }

        /**
         * <p>Environment of the project</p>
         */
        @java.lang.Override
        @JsonSetter(value = "project_environment", nulls = Nulls.SKIP)
        public _FinalStage projectEnvironment(Optional<String> projectEnvironment) {
            this.projectEnvironment = projectEnvironment;
            return this;
        }

        /**
         * <p>Name of the project app</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage projectAppName(String projectAppName) {
            this.projectAppName = Optional.ofNullable(projectAppName);
            return this;
        }

        /**
         * <p>Name of the project app</p>
         */
        @java.lang.Override
        @JsonSetter(value = "project_app_name", nulls = Nulls.SKIP)
        public _FinalStage projectAppName(Optional<String> projectAppName) {
            this.projectAppName = projectAppName;
            return this;
        }

        /**
         * <p>OAuth app ID if applicable</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage oauthAppId(String oauthAppId) {
            this.oauthAppId = Optional.ofNullable(oauthAppId);
            return this;
        }

        /**
         * <p>OAuth app ID if applicable</p>
         */
        @java.lang.Override
        @JsonSetter(value = "oauth_app_id", nulls = Nulls.SKIP)
        public _FinalStage oauthAppId(Optional<String> oauthAppId) {
            this.oauthAppId = oauthAppId;
            return this;
        }

        /**
         * <p>URI to redirect to on error</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage errorRedirectUri(String errorRedirectUri) {
            this.errorRedirectUri = Optional.ofNullable(errorRedirectUri);
            return this;
        }

        /**
         * <p>URI to redirect to on error</p>
         */
        @java.lang.Override
        @JsonSetter(value = "error_redirect_uri", nulls = Nulls.SKIP)
        public _FinalStage errorRedirectUri(Optional<String> errorRedirectUri) {
            this.errorRedirectUri = errorRedirectUri;
            return this;
        }

        /**
         * <p>Error message if validation failed</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage error(String error) {
            this.error = Optional.ofNullable(error);
            return this;
        }

        /**
         * <p>Error message if validation failed</p>
         */
        @java.lang.Override
        @JsonSetter(value = "error", nulls = Nulls.SKIP)
        public _FinalStage error(Optional<String> error) {
            this.error = error;
            return this;
        }

        @java.lang.Override
        public _FinalStage app(App app) {
            this.app = Optional.ofNullable(app);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "app", nulls = Nulls.SKIP)
        public _FinalStage app(Optional<App> app) {
            this.app = app;
            return this;
        }

        @java.lang.Override
        public ValidateTokenResponse build() {
            return new ValidateTokenResponse(
                    app,
                    error,
                    errorRedirectUri,
                    oauthAppId,
                    projectAppName,
                    projectEnvironment,
                    projectId,
                    projectSupportEmail,
                    success,
                    successRedirectUri,
                    additionalProperties);
        }
    }
}
