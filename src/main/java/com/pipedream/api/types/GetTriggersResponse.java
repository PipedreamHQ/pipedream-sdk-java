/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.pipedream.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.pipedream.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetTriggersResponse.Builder.class)
public final class GetTriggersResponse {
    private final List<DeployedComponent> data;

    private final PageInfo pageInfo;

    private final Map<String, Object> additionalProperties;

    private GetTriggersResponse(
            List<DeployedComponent> data, PageInfo pageInfo, Map<String, Object> additionalProperties) {
        this.data = data;
        this.pageInfo = pageInfo;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("data")
    public List<DeployedComponent> getData() {
        return data;
    }

    @JsonProperty("page_info")
    public PageInfo getPageInfo() {
        return pageInfo;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetTriggersResponse && equalTo((GetTriggersResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetTriggersResponse other) {
        return data.equals(other.data) && pageInfo.equals(other.pageInfo);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.data, this.pageInfo);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PageInfoStage builder() {
        return new Builder();
    }

    public interface PageInfoStage {
        _FinalStage pageInfo(@NotNull PageInfo pageInfo);

        Builder from(GetTriggersResponse other);
    }

    public interface _FinalStage {
        GetTriggersResponse build();

        _FinalStage data(List<DeployedComponent> data);

        _FinalStage addData(DeployedComponent data);

        _FinalStage addAllData(List<DeployedComponent> data);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PageInfoStage, _FinalStage {
        private PageInfo pageInfo;

        private List<DeployedComponent> data = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetTriggersResponse other) {
            data(other.getData());
            pageInfo(other.getPageInfo());
            return this;
        }

        @java.lang.Override
        @JsonSetter("page_info")
        public _FinalStage pageInfo(@NotNull PageInfo pageInfo) {
            this.pageInfo = Objects.requireNonNull(pageInfo, "pageInfo must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllData(List<DeployedComponent> data) {
            this.data.addAll(data);
            return this;
        }

        @java.lang.Override
        public _FinalStage addData(DeployedComponent data) {
            this.data.add(data);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "data", nulls = Nulls.SKIP)
        public _FinalStage data(List<DeployedComponent> data) {
            this.data.clear();
            this.data.addAll(data);
            return this;
        }

        @java.lang.Override
        public GetTriggersResponse build() {
            return new GetTriggersResponse(data, pageInfo, additionalProperties);
        }
    }
}
