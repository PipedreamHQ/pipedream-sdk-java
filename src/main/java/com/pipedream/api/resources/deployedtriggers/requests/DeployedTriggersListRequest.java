/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.pipedream.api.resources.deployedtriggers.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.pipedream.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = DeployedTriggersListRequest.Builder.class)
public final class DeployedTriggersListRequest {
    private final Optional<String> after;

    private final Optional<String> before;

    private final Optional<Integer> limit;

    private final String externalUserId;

    private final Map<String, Object> additionalProperties;

    private DeployedTriggersListRequest(
            Optional<String> after,
            Optional<String> before,
            Optional<Integer> limit,
            String externalUserId,
            Map<String, Object> additionalProperties) {
        this.after = after;
        this.before = before;
        this.limit = limit;
        this.externalUserId = externalUserId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The cursor to start from for pagination
     */
    @JsonProperty("after")
    public Optional<String> getAfter() {
        return after;
    }

    /**
     * @return The cursor to end before for pagination
     */
    @JsonProperty("before")
    public Optional<String> getBefore() {
        return before;
    }

    /**
     * @return The maximum number of results to return
     */
    @JsonProperty("limit")
    public Optional<Integer> getLimit() {
        return limit;
    }

    /**
     * @return Your end user ID, for whom you deployed the trigger
     */
    @JsonProperty("external_user_id")
    public String getExternalUserId() {
        return externalUserId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DeployedTriggersListRequest && equalTo((DeployedTriggersListRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DeployedTriggersListRequest other) {
        return after.equals(other.after)
                && before.equals(other.before)
                && limit.equals(other.limit)
                && externalUserId.equals(other.externalUserId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.after, this.before, this.limit, this.externalUserId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ExternalUserIdStage builder() {
        return new Builder();
    }

    public interface ExternalUserIdStage {
        /**
         * <p>Your end user ID, for whom you deployed the trigger</p>
         */
        _FinalStage externalUserId(@NotNull String externalUserId);

        Builder from(DeployedTriggersListRequest other);
    }

    public interface _FinalStage {
        DeployedTriggersListRequest build();

        /**
         * <p>The cursor to start from for pagination</p>
         */
        _FinalStage after(Optional<String> after);

        _FinalStage after(String after);

        /**
         * <p>The cursor to end before for pagination</p>
         */
        _FinalStage before(Optional<String> before);

        _FinalStage before(String before);

        /**
         * <p>The maximum number of results to return</p>
         */
        _FinalStage limit(Optional<Integer> limit);

        _FinalStage limit(Integer limit);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ExternalUserIdStage, _FinalStage {
        private String externalUserId;

        private Optional<Integer> limit = Optional.empty();

        private Optional<String> before = Optional.empty();

        private Optional<String> after = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(DeployedTriggersListRequest other) {
            after(other.getAfter());
            before(other.getBefore());
            limit(other.getLimit());
            externalUserId(other.getExternalUserId());
            return this;
        }

        /**
         * <p>Your end user ID, for whom you deployed the trigger</p>
         * <p>Your end user ID, for whom you deployed the trigger</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("external_user_id")
        public _FinalStage externalUserId(@NotNull String externalUserId) {
            this.externalUserId = Objects.requireNonNull(externalUserId, "externalUserId must not be null");
            return this;
        }

        /**
         * <p>The maximum number of results to return</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage limit(Integer limit) {
            this.limit = Optional.ofNullable(limit);
            return this;
        }

        /**
         * <p>The maximum number of results to return</p>
         */
        @java.lang.Override
        @JsonSetter(value = "limit", nulls = Nulls.SKIP)
        public _FinalStage limit(Optional<Integer> limit) {
            this.limit = limit;
            return this;
        }

        /**
         * <p>The cursor to end before for pagination</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage before(String before) {
            this.before = Optional.ofNullable(before);
            return this;
        }

        /**
         * <p>The cursor to end before for pagination</p>
         */
        @java.lang.Override
        @JsonSetter(value = "before", nulls = Nulls.SKIP)
        public _FinalStage before(Optional<String> before) {
            this.before = before;
            return this;
        }

        /**
         * <p>The cursor to start from for pagination</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage after(String after) {
            this.after = Optional.ofNullable(after);
            return this;
        }

        /**
         * <p>The cursor to start from for pagination</p>
         */
        @java.lang.Override
        @JsonSetter(value = "after", nulls = Nulls.SKIP)
        public _FinalStage after(Optional<String> after) {
            this.after = after;
            return this;
        }

        @java.lang.Override
        public DeployedTriggersListRequest build() {
            return new DeployedTriggersListRequest(after, before, limit, externalUserId, additionalProperties);
        }
    }
}
